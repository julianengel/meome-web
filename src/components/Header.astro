---
const currentPath = Astro.url.pathname;
const isHomePage = currentPath === "/" || currentPath === "/index.html";

const menuItems = [
    {
        text: "Our Companies",
        href: isHomePage ? "#companies" : "/#companies",
        hasSubmenu: true,
    },
    {
        text: "About",
        href: isHomePage ? "#about" : "/#about",
    },
    {
        text: "Our Process",
        href: isHomePage ? "#process" : "/#process",
    },
    {
        text: "Contact",
        href: isHomePage ? "#contact" : "/#contact",
    },
];

import { companies } from "../data/companies";
---

<header
    class="fixed w-full bg-white/90 dark:bg-gray-900/90 backdrop-blur-md z-50 border-b border-gray-200 dark:border-gray-800"
>
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center py-4">
            <div class="flex items-center">
                <a href="/" class="flex items-center">
                    <img src="/logo.svg" alt="meome" class="h-8 w-auto" />
                </a>
            </div>

            <!-- Desktop Navigation -->
            <nav class="hidden md:flex space-x-8">
                {
                    menuItems.map((item) => (
                        <div class="relative group">
                            <a
                                href={item.href}
                                class="text-sm font-medium text-gray-700 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white transition-colors"
                                data-astro-reload={!isHomePage}
                            >
                                {item.text}
                            </a>

                            {item.hasSubmenu && (
                                <div class="absolute left-0 mt-2 w-60 bg-white dark:bg-gray-800 rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200">
                                    <div class="p-4 space-y-3">
                                        {companies.map((company) => (
                                            <a
                                                href={`/companies/${company.id}`}
                                                class="block text-sm text-gray-700 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white"
                                            >
                                                {company.name}
                                            </a>
                                        ))}
                                    </div>
                                </div>
                            )}
                        </div>
                    ))
                }
            </nav>

            <!-- Mobile menu button -->
            <button
                id="mobile-menu-button"
                type="button"
                class="md:hidden p-2 rounded-md text-gray-700 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white"
            >
                <span class="sr-only">Open menu</span>
                <svg
                    class="h-6 w-6"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke="currentColor"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="M4 6h16M4 12h16M4 18h16"></path>
                </svg>
            </button>
        </div>
    </div>

    <!-- Mobile Navigation -->
    <div
        id="mobile-menu"
        class="hidden md:hidden border-t border-gray-200 dark:border-gray-800"
    >
        <div class="px-2 pt-2 pb-3 space-y-1">
            {
                menuItems.map((item) => (
                    <div>
                        <a
                            href={item.href}
                            class="block px-3 py-2 text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50 dark:text-gray-300 dark:hover:text-white dark:hover:bg-gray-800 rounded-md"
                            data-astro-reload={!isHomePage}
                        >
                            {item.text}
                        </a>

                        {item.hasSubmenu && (
                            <div class="pl-6 py-2 space-y-2">
                                {companies.map((company) => (
                                    <a
                                        href={`/companies/${company.id}`}
                                        class="block px-3 py-1 text-sm text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white"
                                    >
                                        {company.name}
                                    </a>
                                ))}
                            </div>
                        )}
                    </div>
                ))
            }
        </div>
    </div>
</header>

<script>
    const mobileMenuButton = document.getElementById("mobile-menu-button");
    const mobileMenu = document.getElementById("mobile-menu");

    mobileMenuButton?.addEventListener("click", () => {
        mobileMenu?.classList.toggle("hidden");
    });

    // Close mobile menu when clicking outside
    document.addEventListener("click", (event) => {
        const target = event.target as HTMLElement;
        if (
            !target.closest("#mobile-menu") &&
            !target.closest("#mobile-menu-button")
        ) {
            mobileMenu?.classList.add("hidden");
        }
    });

    // Handle smooth scrolling only on homepage
    if (
        window.location.pathname === "/" ||
        window.location.pathname === "/index.html"
    ) {
        document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
            anchor.addEventListener("click", function (e) {
                e.preventDefault();
                const targetId = this.getAttribute("href");
                const target = document.querySelector(targetId);

                if (target) {
                    const header = document.querySelector("header");
                    const headerHeight = header?.offsetHeight || 64; // Get actual header height
                    const elementPosition = target.getBoundingClientRect().top;
                    const offsetPosition =
                        elementPosition +
                        window.pageYOffset -
                        (headerHeight - 1); // Subtract 1px to eliminate gap

                    window.scrollTo({
                        top: offsetPosition,
                        behavior: "smooth",
                    });
                }
            });
        });
    }

    // Close mobile menu when clicking a link
    const mobileMenuLinks = mobileMenu?.querySelectorAll("a");
    mobileMenuLinks?.forEach((link) => {
        link.addEventListener("click", () => {
            mobileMenu?.classList.add("hidden");
        });
    });
</script>
